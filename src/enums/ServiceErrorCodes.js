/**
 * Service-Specific Error Codes
 * Each service has its own unique error code prefix for quick identification
 */

const { HTTP_STATUS } = require('../utils/constants');

/**
 * Service-specific error codes with unique prefixes
 * Format: SERVICE_SPECIFIC_ERROR_NAME
 */
const SERVICE_ERROR_CODES = {
  // Authentication Service Errors (AUTH_)
  AUTH_EMAIL_ALREADY_REGISTERED: 'AUTH_EMAIL_ALREADY_REGISTERED',
  AUTH_INVALID_CREDENTIALS: 'AUTH_INVALID_CREDENTIALS',
  AUTH_ACCOUNT_NOT_ACTIVE: 'AUTH_ACCOUNT_NOT_ACTIVE',
  AUTH_INVALID_REFRESH_TOKEN: 'AUTH_INVALID_REFRESH_TOKEN',
  AUTH_USER_NOT_FOUND_OR_INACTIVE: 'AUTH_USER_NOT_FOUND_OR_INACTIVE',
  AUTH_INVALID_RESET_TOKEN: 'AUTH_INVALID_RESET_TOKEN',
  AUTH_USER_NOT_FOUND: 'AUTH_USER_NOT_FOUND',
  AUTH_CURRENT_PASSWORD_INCORRECT: 'AUTH_CURRENT_PASSWORD_INCORRECT',
  AUTH_INVALID_VERIFICATION_TOKEN: 'AUTH_INVALID_VERIFICATION_TOKEN',
  AUTH_EMAIL_ALREADY_VERIFIED: 'AUTH_EMAIL_ALREADY_VERIFIED',
  AUTH_EMAIL_ALREADY_IN_USE: 'AUTH_EMAIL_ALREADY_IN_USE',

  // Member Service Errors (MEMBER_)
  MEMBER_EMAIL_ALREADY_REGISTERED: 'MEMBER_EMAIL_ALREADY_REGISTERED',
  MEMBER_ID_ALREADY_TAKEN: 'MEMBER_ID_ALREADY_TAKEN',
  MEMBER_NOT_FOUND: 'MEMBER_NOT_FOUND',
  MEMBER_EMAIL_ALREADY_IN_USE: 'MEMBER_EMAIL_ALREADY_IN_USE',
  MEMBER_ID_ALREADY_IN_USE: 'MEMBER_ID_ALREADY_IN_USE',
  MEMBER_CANNOT_DELETE_WITH_HISTORY: 'MEMBER_CANNOT_DELETE_WITH_HISTORY',
  MEMBER_AMOUNT_MUST_BE_POSITIVE: 'MEMBER_AMOUNT_MUST_BE_POSITIVE',
  MEMBER_INSUFFICIENT_POINTS: 'MEMBER_INSUFFICIENT_POINTS',
  MEMBER_TIER_NOT_FOUND: 'MEMBER_TIER_NOT_FOUND',
  MEMBER_FAILED_TO_GENERATE_ID: 'MEMBER_FAILED_TO_GENERATE_ID',

  // Brand Service Errors (BRAND_)
  BRAND_SLUG_ALREADY_TAKEN: 'BRAND_SLUG_ALREADY_TAKEN',
  BRAND_NOT_FOUND: 'BRAND_NOT_FOUND',
  BRAND_ACCESS_DENIED: 'BRAND_ACCESS_DENIED',
  BRAND_NOT_AVAILABLE: 'BRAND_NOT_AVAILABLE',
  BRAND_CANNOT_DELETE_WITH_ACTIVE_DATA: 'BRAND_CANNOT_DELETE_WITH_ACTIVE_DATA',

  // User Service Errors (USER_)
  USER_EMAIL_ALREADY_REGISTERED: 'USER_EMAIL_ALREADY_REGISTERED',
  USER_BRAND_NOT_FOUND: 'USER_BRAND_NOT_FOUND',
  USER_BRAND_ACCESS_DENIED: 'USER_BRAND_ACCESS_DENIED',
  USER_NOT_FOUND: 'USER_NOT_FOUND',
  USER_ACCESS_DENIED_TO_VIEW: 'USER_ACCESS_DENIED_TO_VIEW',
  USER_ACCESS_DENIED_TO_UPDATE: 'USER_ACCESS_DENIED_TO_UPDATE',
  USER_EMAIL_ALREADY_IN_USE: 'USER_EMAIL_ALREADY_IN_USE',
  USER_ACCESS_DENIED_TO_CHANGE_ROLE: 'USER_ACCESS_DENIED_TO_CHANGE_ROLE',
  USER_REQUESTER_NOT_FOUND: 'USER_REQUESTER_NOT_FOUND',
  USER_ACCESS_DENIED_TO_DELETE: 'USER_ACCESS_DENIED_TO_DELETE',
  USER_CANNOT_DELETE_OWN_ACCOUNT: 'USER_CANNOT_DELETE_OWN_ACCOUNT',
  USER_ACCESS_DENIED_TO_CHANGE_PASSWORD: 'USER_ACCESS_DENIED_TO_CHANGE_PASSWORD',
  USER_CURRENT_PASSWORD_INCORRECT: 'USER_CURRENT_PASSWORD_INCORRECT',
  USER_ACCESS_DENIED_TO_VIEW_ACTIVITY: 'USER_ACCESS_DENIED_TO_VIEW_ACTIVITY',
  USER_ACCESS_DENIED_TO_UPDATE_STATUS: 'USER_ACCESS_DENIED_TO_UPDATE_STATUS',
  USER_INVALID_STATUS: 'USER_INVALID_STATUS',
  USER_CANNOT_DEACTIVATE_OWN_ACCOUNT: 'USER_CANNOT_DEACTIVATE_OWN_ACCOUNT',

  // Transaction Service Errors (TRANSACTION_)
  TRANSACTION_MEMBER_NOT_FOUND: 'TRANSACTION_MEMBER_NOT_FOUND',
  TRANSACTION_INSUFFICIENT_POINTS: 'TRANSACTION_INSUFFICIENT_POINTS',
  TRANSACTION_NOT_FOUND: 'TRANSACTION_NOT_FOUND',
  TRANSACTION_CANNOT_MODIFY_COMPLETED: 'TRANSACTION_CANNOT_MODIFY_COMPLETED',
  TRANSACTION_ONLY_COMPLETED_CAN_BE_REVERSED: 'TRANSACTION_ONLY_COMPLETED_CAN_BE_REVERSED',
  TRANSACTION_ALREADY_REVERSED: 'TRANSACTION_ALREADY_REVERSED',
  TRANSACTION_INSUFFICIENT_POINTS_FOR_REVERSAL: 'TRANSACTION_INSUFFICIENT_POINTS_FOR_REVERSAL',
  TRANSACTION_NOT_PENDING: 'TRANSACTION_NOT_PENDING',
  TRANSACTION_INVALID_ACTION: 'TRANSACTION_INVALID_ACTION',
  TRANSACTION_MEMBER_ID_REQUIRED: 'TRANSACTION_MEMBER_ID_REQUIRED',
  TRANSACTION_VALID_TYPE_REQUIRED: 'TRANSACTION_VALID_TYPE_REQUIRED',
  TRANSACTION_AMOUNT_MUST_BE_POSITIVE: 'TRANSACTION_AMOUNT_MUST_BE_POSITIVE',
  TRANSACTION_DESCRIPTION_REQUIRED: 'TRANSACTION_DESCRIPTION_REQUIRED',

  // Mission Service Errors (MISSION_)
  MISSION_NOT_FOUND: 'MISSION_NOT_FOUND',
  MISSION_CANNOT_DELETE_WITH_HISTORY: 'MISSION_CANNOT_DELETE_WITH_HISTORY',
  MISSION_NOT_ACTIVE: 'MISSION_NOT_ACTIVE',
  MISSION_NOT_YET_AVAILABLE: 'MISSION_NOT_YET_AVAILABLE',
  MISSION_NO_LONGER_AVAILABLE: 'MISSION_NO_LONGER_AVAILABLE',
  MISSION_MEMBER_NOT_FOUND: 'MISSION_MEMBER_NOT_FOUND',
  MISSION_ALREADY_COMPLETED: 'MISSION_ALREADY_COMPLETED',
  MISSION_MEMBER_NOT_ELIGIBLE: 'MISSION_MEMBER_NOT_ELIGIBLE',
  MISSION_NAME_REQUIRED: 'MISSION_NAME_REQUIRED',
  MISSION_VALID_TYPE_REQUIRED: 'MISSION_VALID_TYPE_REQUIRED',
  MISSION_TARGET_VALUE_MUST_BE_POSITIVE: 'MISSION_TARGET_VALUE_MUST_BE_POSITIVE',
  MISSION_REWARD_POINTS_CANNOT_BE_NEGATIVE: 'MISSION_REWARD_POINTS_CANNOT_BE_NEGATIVE',
  MISSION_END_DATE_MUST_BE_AFTER_START: 'MISSION_END_DATE_MUST_BE_AFTER_START',
  MISSION_PROFILE_COMPLETION_DATA_REQUIRED: 'MISSION_PROFILE_COMPLETION_DATA_REQUIRED',

  // Wheel Service Errors (WHEEL_)
  WHEEL_NOT_FOUND: 'WHEEL_NOT_FOUND',
  WHEEL_CANNOT_DELETE_WITH_HISTORY: 'WHEEL_CANNOT_DELETE_WITH_HISTORY',
  WHEEL_NOT_ACTIVE: 'WHEEL_NOT_ACTIVE',
  WHEEL_NOT_YET_AVAILABLE: 'WHEEL_NOT_YET_AVAILABLE',
  WHEEL_NO_LONGER_AVAILABLE: 'WHEEL_NO_LONGER_AVAILABLE',
  WHEEL_MEMBER_NOT_FOUND: 'WHEEL_MEMBER_NOT_FOUND',
  WHEEL_MEMBER_NOT_ELIGIBLE: 'WHEEL_MEMBER_NOT_ELIGIBLE',
  WHEEL_FAILED_TO_SELECT_WINNING_ITEM: 'WHEEL_FAILED_TO_SELECT_WINNING_ITEM',
  WHEEL_MUST_HAVE_AT_LEAST_ONE_ITEM: 'WHEEL_MUST_HAVE_AT_LEAST_ONE_ITEM',
  WHEEL_PROBABILITIES_MUST_SUM_TO_ONE: 'WHEEL_PROBABILITIES_MUST_SUM_TO_ONE',
  WHEEL_INVALID_PROBABILITY: 'WHEEL_INVALID_PROBABILITY',

  // Tier Service Errors (TIER_)
  TIER_BRAND_NOT_FOUND: 'TIER_BRAND_NOT_FOUND',
  TIER_NAME_ALREADY_EXISTS: 'TIER_NAME_ALREADY_EXISTS',
  TIER_SLUG_ALREADY_EXISTS: 'TIER_SLUG_ALREADY_EXISTS',
  TIER_NOT_FOUND: 'TIER_NOT_FOUND',
  TIER_CANNOT_DELETE_WITH_MEMBERS: 'TIER_CANNOT_DELETE_WITH_MEMBERS',
  TIER_ALREADY_EXIST_FOR_BRAND: 'TIER_ALREADY_EXIST_FOR_BRAND',
  TIER_INVALID_HIERARCHY: 'TIER_INVALID_HIERARCHY',
  TIER_MEMBER_NOT_FOUND: 'TIER_MEMBER_NOT_FOUND',

  // Admin Service Errors (ADMIN_)
  ADMIN_INVALID_REPORT_TYPE: 'ADMIN_INVALID_REPORT_TYPE',
  ADMIN_USER_NOT_FOUND: 'ADMIN_USER_NOT_FOUND',
  ADMIN_ACCESS_REQUIRED: 'ADMIN_ACCESS_REQUIRED',
  ADMIN_SUPER_ADMIN_ACCESS_REQUIRED: 'ADMIN_SUPER_ADMIN_ACCESS_REQUIRED',
  ADMIN_INVALID_SETTING: 'ADMIN_INVALID_SETTING'
};

/**
 * Error descriptions for each service-specific error code
 */
const SERVICE_ERROR_DESCRIPTIONS = {
  // Authentication Service
  [SERVICE_ERROR_CODES.AUTH_EMAIL_ALREADY_REGISTERED]: 'Email address is already registered',
  [SERVICE_ERROR_CODES.AUTH_INVALID_CREDENTIALS]: 'Invalid email or password',
  [SERVICE_ERROR_CODES.AUTH_ACCOUNT_NOT_ACTIVE]: 'Account is not active',
  [SERVICE_ERROR_CODES.AUTH_INVALID_REFRESH_TOKEN]: 'Invalid refresh token',
  [SERVICE_ERROR_CODES.AUTH_USER_NOT_FOUND_OR_INACTIVE]: 'User not found or inactive',
  [SERVICE_ERROR_CODES.AUTH_INVALID_RESET_TOKEN]: 'Invalid or expired reset token',
  [SERVICE_ERROR_CODES.AUTH_USER_NOT_FOUND]: 'User not found',
  [SERVICE_ERROR_CODES.AUTH_CURRENT_PASSWORD_INCORRECT]: 'Current password is incorrect',
  [SERVICE_ERROR_CODES.AUTH_INVALID_VERIFICATION_TOKEN]: 'Invalid or expired verification token',
  [SERVICE_ERROR_CODES.AUTH_EMAIL_ALREADY_VERIFIED]: 'Email is already verified',
  [SERVICE_ERROR_CODES.AUTH_EMAIL_ALREADY_IN_USE]: 'Email address is already in use',

  // Member Service
  [SERVICE_ERROR_CODES.MEMBER_EMAIL_ALREADY_REGISTERED]: 'Email address is already registered for this brand',
  [SERVICE_ERROR_CODES.MEMBER_ID_ALREADY_TAKEN]: 'Member ID is already taken',
  [SERVICE_ERROR_CODES.MEMBER_NOT_FOUND]: 'Member not found',
  [SERVICE_ERROR_CODES.MEMBER_EMAIL_ALREADY_IN_USE]: 'Email address is already in use',
  [SERVICE_ERROR_CODES.MEMBER_ID_ALREADY_IN_USE]: 'Member ID is already in use',
  [SERVICE_ERROR_CODES.MEMBER_CANNOT_DELETE_WITH_HISTORY]: 'Cannot delete member with transaction history. Please deactivate instead.',
  [SERVICE_ERROR_CODES.MEMBER_AMOUNT_MUST_BE_POSITIVE]: 'Amount must be greater than 0',
  [SERVICE_ERROR_CODES.MEMBER_INSUFFICIENT_POINTS]: 'Insufficient points balance',
  [SERVICE_ERROR_CODES.MEMBER_TIER_NOT_FOUND]: 'Tier not found',
  [SERVICE_ERROR_CODES.MEMBER_FAILED_TO_GENERATE_ID]: 'Failed to generate unique member ID',

  // Brand Service
  [SERVICE_ERROR_CODES.BRAND_SLUG_ALREADY_TAKEN]: 'Brand slug is already taken',
  [SERVICE_ERROR_CODES.BRAND_NOT_FOUND]: 'Brand not found',
  [SERVICE_ERROR_CODES.BRAND_ACCESS_DENIED]: 'Access denied to this brand',
  [SERVICE_ERROR_CODES.BRAND_NOT_AVAILABLE]: 'Brand is not available',
  [SERVICE_ERROR_CODES.BRAND_CANNOT_DELETE_WITH_ACTIVE_DATA]: 'Cannot delete brand with active data. Please archive instead.',

  // User Service
  [SERVICE_ERROR_CODES.USER_EMAIL_ALREADY_REGISTERED]: 'Email address is already registered',
  [SERVICE_ERROR_CODES.USER_BRAND_NOT_FOUND]: 'Brand not found',
  [SERVICE_ERROR_CODES.USER_BRAND_ACCESS_DENIED]: 'Access denied to this brand',
  [SERVICE_ERROR_CODES.USER_NOT_FOUND]: 'User not found',
  [SERVICE_ERROR_CODES.USER_ACCESS_DENIED_TO_VIEW]: 'Access denied to view this user',
  [SERVICE_ERROR_CODES.USER_ACCESS_DENIED_TO_UPDATE]: 'Access denied to update this user',
  [SERVICE_ERROR_CODES.USER_EMAIL_ALREADY_IN_USE]: 'Email address is already in use',
  [SERVICE_ERROR_CODES.USER_ACCESS_DENIED_TO_CHANGE_ROLE]: 'Access denied to change user role',
  [SERVICE_ERROR_CODES.USER_REQUESTER_NOT_FOUND]: 'Requester not found',
  [SERVICE_ERROR_CODES.USER_ACCESS_DENIED_TO_DELETE]: 'Access denied to delete this user',
  [SERVICE_ERROR_CODES.USER_CANNOT_DELETE_OWN_ACCOUNT]: 'Cannot delete your own account',
  [SERVICE_ERROR_CODES.USER_ACCESS_DENIED_TO_CHANGE_PASSWORD]: 'Access denied to change user password',
  [SERVICE_ERROR_CODES.USER_CURRENT_PASSWORD_INCORRECT]: 'Current password is incorrect',
  [SERVICE_ERROR_CODES.USER_ACCESS_DENIED_TO_VIEW_ACTIVITY]: 'Access denied to view user activity',
  [SERVICE_ERROR_CODES.USER_ACCESS_DENIED_TO_UPDATE_STATUS]: 'Access denied to update user status',
  [SERVICE_ERROR_CODES.USER_INVALID_STATUS]: 'Invalid user status',
  [SERVICE_ERROR_CODES.USER_CANNOT_DEACTIVATE_OWN_ACCOUNT]: 'Cannot deactivate your own account',

  // Transaction Service
  [SERVICE_ERROR_CODES.TRANSACTION_MEMBER_NOT_FOUND]: 'Member not found',
  [SERVICE_ERROR_CODES.TRANSACTION_INSUFFICIENT_POINTS]: 'Insufficient points balance',
  [SERVICE_ERROR_CODES.TRANSACTION_NOT_FOUND]: 'Transaction not found',
  [SERVICE_ERROR_CODES.TRANSACTION_CANNOT_MODIFY_COMPLETED]: 'Cannot modify amount or type of completed transaction',
  [SERVICE_ERROR_CODES.TRANSACTION_ONLY_COMPLETED_CAN_BE_REVERSED]: 'Only completed transactions can be reversed',
  [SERVICE_ERROR_CODES.TRANSACTION_ALREADY_REVERSED]: 'Transaction has already been reversed',
  [SERVICE_ERROR_CODES.TRANSACTION_INSUFFICIENT_POINTS_FOR_REVERSAL]: 'Insufficient points balance for reversal',
  [SERVICE_ERROR_CODES.TRANSACTION_NOT_PENDING]: 'Transaction is not pending',
  [SERVICE_ERROR_CODES.TRANSACTION_INVALID_ACTION]: 'Invalid action. Must be approve or reject',
  [SERVICE_ERROR_CODES.TRANSACTION_MEMBER_ID_REQUIRED]: 'Member ID is required',
  [SERVICE_ERROR_CODES.TRANSACTION_VALID_TYPE_REQUIRED]: 'Valid transaction type is required',
  [SERVICE_ERROR_CODES.TRANSACTION_AMOUNT_MUST_BE_POSITIVE]: 'Amount must be greater than 0',
  [SERVICE_ERROR_CODES.TRANSACTION_DESCRIPTION_REQUIRED]: 'Description is required',

  // Mission Service
  [SERVICE_ERROR_CODES.MISSION_NOT_FOUND]: 'Mission not found',
  [SERVICE_ERROR_CODES.MISSION_CANNOT_DELETE_WITH_HISTORY]: 'Cannot delete mission with completion history. Please deactivate instead.',
  [SERVICE_ERROR_CODES.MISSION_NOT_ACTIVE]: 'Mission is not active',
  [SERVICE_ERROR_CODES.MISSION_NOT_YET_AVAILABLE]: 'Mission is not yet available',
  [SERVICE_ERROR_CODES.MISSION_NO_LONGER_AVAILABLE]: 'Mission is no longer available',
  [SERVICE_ERROR_CODES.MISSION_MEMBER_NOT_FOUND]: 'Member not found',
  [SERVICE_ERROR_CODES.MISSION_ALREADY_COMPLETED]: 'Mission has already been completed',
  [SERVICE_ERROR_CODES.MISSION_MEMBER_NOT_ELIGIBLE]: 'Member is not eligible for this mission',
  [SERVICE_ERROR_CODES.MISSION_NAME_REQUIRED]: 'Mission name is required',
  [SERVICE_ERROR_CODES.MISSION_VALID_TYPE_REQUIRED]: 'Valid mission type is required',
  [SERVICE_ERROR_CODES.MISSION_TARGET_VALUE_MUST_BE_POSITIVE]: 'Target value must be greater than 0',
  [SERVICE_ERROR_CODES.MISSION_REWARD_POINTS_CANNOT_BE_NEGATIVE]: 'Reward points cannot be negative',
  [SERVICE_ERROR_CODES.MISSION_END_DATE_MUST_BE_AFTER_START]: 'End date must be after start date',
  [SERVICE_ERROR_CODES.MISSION_PROFILE_COMPLETION_DATA_REQUIRED]: 'Profile completion data required',

  // Wheel Service
  [SERVICE_ERROR_CODES.WHEEL_NOT_FOUND]: 'Wheel not found',
  [SERVICE_ERROR_CODES.WHEEL_CANNOT_DELETE_WITH_HISTORY]: 'Cannot delete wheel with spin history. Please deactivate instead.',
  [SERVICE_ERROR_CODES.WHEEL_NOT_ACTIVE]: 'Wheel is not active',
  [SERVICE_ERROR_CODES.WHEEL_NOT_YET_AVAILABLE]: 'Wheel is not yet available',
  [SERVICE_ERROR_CODES.WHEEL_NO_LONGER_AVAILABLE]: 'Wheel is no longer available',
  [SERVICE_ERROR_CODES.WHEEL_MEMBER_NOT_FOUND]: 'Member not found',
  [SERVICE_ERROR_CODES.WHEEL_MEMBER_NOT_ELIGIBLE]: 'Member is not eligible for wheel spin',
  [SERVICE_ERROR_CODES.WHEEL_FAILED_TO_SELECT_WINNING_ITEM]: 'Failed to select winning item',
  [SERVICE_ERROR_CODES.WHEEL_MUST_HAVE_AT_LEAST_ONE_ITEM]: 'Wheel must have at least one item',
  [SERVICE_ERROR_CODES.WHEEL_PROBABILITIES_MUST_SUM_TO_ONE]: 'Wheel item probabilities must sum to 1.0',
  [SERVICE_ERROR_CODES.WHEEL_INVALID_PROBABILITY]: 'Invalid probability for wheel item',

  // Tier Service
  [SERVICE_ERROR_CODES.TIER_BRAND_NOT_FOUND]: 'Brand not found',
  [SERVICE_ERROR_CODES.TIER_NAME_ALREADY_EXISTS]: 'Tier name already exists for this brand',
  [SERVICE_ERROR_CODES.TIER_SLUG_ALREADY_EXISTS]: 'Tier slug already exists for this brand',
  [SERVICE_ERROR_CODES.TIER_NOT_FOUND]: 'Tier not found',
  [SERVICE_ERROR_CODES.TIER_CANNOT_DELETE_WITH_MEMBERS]: 'Cannot delete tier with members. Please reassign members first.',
  [SERVICE_ERROR_CODES.TIER_ALREADY_EXIST_FOR_BRAND]: 'Tiers already exist for this brand',
  [SERVICE_ERROR_CODES.TIER_INVALID_HIERARCHY]: 'Invalid tier hierarchy configuration',
  [SERVICE_ERROR_CODES.TIER_MEMBER_NOT_FOUND]: 'Member not found for tier assignment',

  // Admin Service
  [SERVICE_ERROR_CODES.ADMIN_INVALID_REPORT_TYPE]: 'Invalid report type',
  [SERVICE_ERROR_CODES.ADMIN_USER_NOT_FOUND]: 'User not found',
  [SERVICE_ERROR_CODES.ADMIN_ACCESS_REQUIRED]: 'Admin access required',
  [SERVICE_ERROR_CODES.ADMIN_SUPER_ADMIN_ACCESS_REQUIRED]: 'Super admin access required',
  [SERVICE_ERROR_CODES.ADMIN_INVALID_SETTING]: 'Invalid system setting'
};

/**
 * HTTP status code mappings for service-specific errors
 */
const SERVICE_ERROR_HTTP_STATUS = {
  // Authentication Service - mostly 401 Unauthorized and 409 Conflict
  [SERVICE_ERROR_CODES.AUTH_EMAIL_ALREADY_REGISTERED]: HTTP_STATUS.CONFLICT,
  [SERVICE_ERROR_CODES.AUTH_INVALID_CREDENTIALS]: HTTP_STATUS.UNAUTHORIZED,
  [SERVICE_ERROR_CODES.AUTH_ACCOUNT_NOT_ACTIVE]: HTTP_STATUS.UNAUTHORIZED,
  [SERVICE_ERROR_CODES.AUTH_INVALID_REFRESH_TOKEN]: HTTP_STATUS.UNAUTHORIZED,
  [SERVICE_ERROR_CODES.AUTH_USER_NOT_FOUND_OR_INACTIVE]: HTTP_STATUS.UNAUTHORIZED,
  [SERVICE_ERROR_CODES.AUTH_INVALID_RESET_TOKEN]: HTTP_STATUS.UNAUTHORIZED,
  [SERVICE_ERROR_CODES.AUTH_USER_NOT_FOUND]: HTTP_STATUS.NOT_FOUND,
  [SERVICE_ERROR_CODES.AUTH_CURRENT_PASSWORD_INCORRECT]: HTTP_STATUS.UNAUTHORIZED,
  [SERVICE_ERROR_CODES.AUTH_INVALID_VERIFICATION_TOKEN]: HTTP_STATUS.UNAUTHORIZED,
  [SERVICE_ERROR_CODES.AUTH_EMAIL_ALREADY_VERIFIED]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.AUTH_EMAIL_ALREADY_IN_USE]: HTTP_STATUS.CONFLICT,

  // Member Service - mostly 404 Not Found, 409 Conflict, 400 Bad Request
  [SERVICE_ERROR_CODES.MEMBER_EMAIL_ALREADY_REGISTERED]: HTTP_STATUS.CONFLICT,
  [SERVICE_ERROR_CODES.MEMBER_ID_ALREADY_TAKEN]: HTTP_STATUS.CONFLICT,
  [SERVICE_ERROR_CODES.MEMBER_NOT_FOUND]: HTTP_STATUS.NOT_FOUND,
  [SERVICE_ERROR_CODES.MEMBER_EMAIL_ALREADY_IN_USE]: HTTP_STATUS.CONFLICT,
  [SERVICE_ERROR_CODES.MEMBER_ID_ALREADY_IN_USE]: HTTP_STATUS.CONFLICT,
  [SERVICE_ERROR_CODES.MEMBER_CANNOT_DELETE_WITH_HISTORY]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.MEMBER_AMOUNT_MUST_BE_POSITIVE]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.MEMBER_INSUFFICIENT_POINTS]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.MEMBER_TIER_NOT_FOUND]: HTTP_STATUS.NOT_FOUND,
  [SERVICE_ERROR_CODES.MEMBER_FAILED_TO_GENERATE_ID]: HTTP_STATUS.INTERNAL_SERVER_ERROR,

  // Brand Service - mostly 404 Not Found, 409 Conflict, 403 Forbidden
  [SERVICE_ERROR_CODES.BRAND_SLUG_ALREADY_TAKEN]: HTTP_STATUS.CONFLICT,
  [SERVICE_ERROR_CODES.BRAND_NOT_FOUND]: HTTP_STATUS.NOT_FOUND,
  [SERVICE_ERROR_CODES.BRAND_ACCESS_DENIED]: HTTP_STATUS.FORBIDDEN,
  [SERVICE_ERROR_CODES.BRAND_NOT_AVAILABLE]: HTTP_STATUS.NOT_FOUND,
  [SERVICE_ERROR_CODES.BRAND_CANNOT_DELETE_WITH_ACTIVE_DATA]: HTTP_STATUS.BAD_REQUEST,

  // User Service - mostly 404 Not Found, 409 Conflict, 403 Forbidden, 400 Bad Request
  [SERVICE_ERROR_CODES.USER_EMAIL_ALREADY_REGISTERED]: HTTP_STATUS.CONFLICT,
  [SERVICE_ERROR_CODES.USER_BRAND_NOT_FOUND]: HTTP_STATUS.NOT_FOUND,
  [SERVICE_ERROR_CODES.USER_BRAND_ACCESS_DENIED]: HTTP_STATUS.FORBIDDEN,
  [SERVICE_ERROR_CODES.USER_NOT_FOUND]: HTTP_STATUS.NOT_FOUND,
  [SERVICE_ERROR_CODES.USER_ACCESS_DENIED_TO_VIEW]: HTTP_STATUS.FORBIDDEN,
  [SERVICE_ERROR_CODES.USER_ACCESS_DENIED_TO_UPDATE]: HTTP_STATUS.FORBIDDEN,
  [SERVICE_ERROR_CODES.USER_EMAIL_ALREADY_IN_USE]: HTTP_STATUS.CONFLICT,
  [SERVICE_ERROR_CODES.USER_ACCESS_DENIED_TO_CHANGE_ROLE]: HTTP_STATUS.FORBIDDEN,
  [SERVICE_ERROR_CODES.USER_REQUESTER_NOT_FOUND]: HTTP_STATUS.NOT_FOUND,
  [SERVICE_ERROR_CODES.USER_ACCESS_DENIED_TO_DELETE]: HTTP_STATUS.FORBIDDEN,
  [SERVICE_ERROR_CODES.USER_CANNOT_DELETE_OWN_ACCOUNT]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.USER_ACCESS_DENIED_TO_CHANGE_PASSWORD]: HTTP_STATUS.FORBIDDEN,
  [SERVICE_ERROR_CODES.USER_CURRENT_PASSWORD_INCORRECT]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.USER_ACCESS_DENIED_TO_VIEW_ACTIVITY]: HTTP_STATUS.FORBIDDEN,
  [SERVICE_ERROR_CODES.USER_ACCESS_DENIED_TO_UPDATE_STATUS]: HTTP_STATUS.FORBIDDEN,
  [SERVICE_ERROR_CODES.USER_INVALID_STATUS]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.USER_CANNOT_DEACTIVATE_OWN_ACCOUNT]: HTTP_STATUS.BAD_REQUEST,

  // Transaction Service - mostly 404 Not Found, 400 Bad Request
  [SERVICE_ERROR_CODES.TRANSACTION_MEMBER_NOT_FOUND]: HTTP_STATUS.NOT_FOUND,
  [SERVICE_ERROR_CODES.TRANSACTION_INSUFFICIENT_POINTS]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.TRANSACTION_NOT_FOUND]: HTTP_STATUS.NOT_FOUND,
  [SERVICE_ERROR_CODES.TRANSACTION_CANNOT_MODIFY_COMPLETED]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.TRANSACTION_ONLY_COMPLETED_CAN_BE_REVERSED]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.TRANSACTION_ALREADY_REVERSED]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.TRANSACTION_INSUFFICIENT_POINTS_FOR_REVERSAL]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.TRANSACTION_NOT_PENDING]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.TRANSACTION_INVALID_ACTION]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.TRANSACTION_MEMBER_ID_REQUIRED]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.TRANSACTION_VALID_TYPE_REQUIRED]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.TRANSACTION_AMOUNT_MUST_BE_POSITIVE]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.TRANSACTION_DESCRIPTION_REQUIRED]: HTTP_STATUS.BAD_REQUEST,

  // Mission Service - mostly 404 Not Found, 400 Bad Request
  [SERVICE_ERROR_CODES.MISSION_NOT_FOUND]: HTTP_STATUS.NOT_FOUND,
  [SERVICE_ERROR_CODES.MISSION_CANNOT_DELETE_WITH_HISTORY]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.MISSION_NOT_ACTIVE]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.MISSION_NOT_YET_AVAILABLE]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.MISSION_NO_LONGER_AVAILABLE]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.MISSION_MEMBER_NOT_FOUND]: HTTP_STATUS.NOT_FOUND,
  [SERVICE_ERROR_CODES.MISSION_ALREADY_COMPLETED]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.MISSION_MEMBER_NOT_ELIGIBLE]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.MISSION_NAME_REQUIRED]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.MISSION_VALID_TYPE_REQUIRED]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.MISSION_TARGET_VALUE_MUST_BE_POSITIVE]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.MISSION_REWARD_POINTS_CANNOT_BE_NEGATIVE]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.MISSION_END_DATE_MUST_BE_AFTER_START]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.MISSION_PROFILE_COMPLETION_DATA_REQUIRED]: HTTP_STATUS.BAD_REQUEST,

  // Wheel Service - mostly 404 Not Found, 400 Bad Request, 500 Internal Server Error
  [SERVICE_ERROR_CODES.WHEEL_NOT_FOUND]: HTTP_STATUS.NOT_FOUND,
  [SERVICE_ERROR_CODES.WHEEL_CANNOT_DELETE_WITH_HISTORY]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.WHEEL_NOT_ACTIVE]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.WHEEL_NOT_YET_AVAILABLE]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.WHEEL_NO_LONGER_AVAILABLE]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.WHEEL_MEMBER_NOT_FOUND]: HTTP_STATUS.NOT_FOUND,
  [SERVICE_ERROR_CODES.WHEEL_MEMBER_NOT_ELIGIBLE]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.WHEEL_FAILED_TO_SELECT_WINNING_ITEM]: HTTP_STATUS.INTERNAL_SERVER_ERROR,
  [SERVICE_ERROR_CODES.WHEEL_MUST_HAVE_AT_LEAST_ONE_ITEM]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.WHEEL_PROBABILITIES_MUST_SUM_TO_ONE]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.WHEEL_INVALID_PROBABILITY]: HTTP_STATUS.BAD_REQUEST,

  // Tier Service - mostly 404 Not Found, 409 Conflict, 400 Bad Request
  [SERVICE_ERROR_CODES.TIER_BRAND_NOT_FOUND]: HTTP_STATUS.NOT_FOUND,
  [SERVICE_ERROR_CODES.TIER_NAME_ALREADY_EXISTS]: HTTP_STATUS.CONFLICT,
  [SERVICE_ERROR_CODES.TIER_SLUG_ALREADY_EXISTS]: HTTP_STATUS.CONFLICT,
  [SERVICE_ERROR_CODES.TIER_NOT_FOUND]: HTTP_STATUS.NOT_FOUND,
  [SERVICE_ERROR_CODES.TIER_CANNOT_DELETE_WITH_MEMBERS]: HTTP_STATUS.CONFLICT,
  [SERVICE_ERROR_CODES.TIER_ALREADY_EXIST_FOR_BRAND]: HTTP_STATUS.CONFLICT,
  [SERVICE_ERROR_CODES.TIER_INVALID_HIERARCHY]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.TIER_MEMBER_NOT_FOUND]: HTTP_STATUS.NOT_FOUND,

  // Admin Service - mostly 404 Not Found, 403 Forbidden, 400 Bad Request
  [SERVICE_ERROR_CODES.ADMIN_INVALID_REPORT_TYPE]: HTTP_STATUS.BAD_REQUEST,
  [SERVICE_ERROR_CODES.ADMIN_USER_NOT_FOUND]: HTTP_STATUS.NOT_FOUND,
  [SERVICE_ERROR_CODES.ADMIN_ACCESS_REQUIRED]: HTTP_STATUS.FORBIDDEN,
  [SERVICE_ERROR_CODES.ADMIN_SUPER_ADMIN_ACCESS_REQUIRED]: HTTP_STATUS.FORBIDDEN,
  [SERVICE_ERROR_CODES.ADMIN_INVALID_SETTING]: HTTP_STATUS.BAD_REQUEST
};

/**
 * Service prefixes for quick identification
 */
const SERVICE_PREFIXES = {
  AUTH: 'AUTH_',
  MEMBER: 'MEMBER_',
  BRAND: 'BRAND_',
  USER: 'USER_',
  TRANSACTION: 'TRANSACTION_',
  MISSION: 'MISSION_',
  WHEEL: 'WHEEL_',
  TIER: 'TIER_',
  ADMIN: 'ADMIN_'
};

/**
 * Helper Functions
 */

/**
 * Extract service name from error code
 * @param {string} errorCode - The service-specific error code
 * @returns {string|null} Service name or null if not a service-specific error
 */
const getServiceFromErrorCode = (errorCode) => {
  if (!errorCode || typeof errorCode !== 'string') {
    return null;
  }

  for (const [service, prefix] of Object.entries(SERVICE_PREFIXES)) {
    if (errorCode.startsWith(prefix)) {
      return service.toLowerCase();
    }
  }

  return null;
};

/**
 * Get all error codes for a specific service
 * @param {string} serviceName - Service name (auth, member, brand, etc.)
 * @returns {string[]} Array of error codes for the service
 */
const getErrorCodesForService = (serviceName) => {
  if (!serviceName || typeof serviceName !== 'string') {
    return [];
  }

  const prefix = SERVICE_PREFIXES[serviceName.toUpperCase()];
  if (!prefix) {
    return [];
  }

  return Object.values(SERVICE_ERROR_CODES).filter(code => code.startsWith(prefix));
};

/**
 * Generate error code with service prefix
 * @param {string} serviceName - Service name
 * @param {string} errorName - Error name
 * @returns {string} Full error code with service prefix
 */
const generateServiceErrorCode = (serviceName, errorName) => {
  if (!serviceName || !errorName) {
    throw new Error('Service name and error name are required');
  }

  const prefix = SERVICE_PREFIXES[serviceName.toUpperCase()];
  if (!prefix) {
    throw new Error(`Unknown service: ${serviceName}`);
  }

  return `${prefix}${errorName.toUpperCase()}`;
};

/**
 * Get service error details
 * @param {string} errorCode - Service-specific error code
 * @returns {object} Error details including description and HTTP status
 */
const getServiceErrorDetails = (errorCode) => {
  if (!errorCode || !SERVICE_ERROR_CODES[errorCode]) {
    return null;
  }

  return {
    code: errorCode,
    description: SERVICE_ERROR_DESCRIPTIONS[errorCode] || 'Unknown error',
    httpStatus: SERVICE_ERROR_HTTP_STATUS[errorCode] || HTTP_STATUS.INTERNAL_SERVER_ERROR,
    service: getServiceFromErrorCode(errorCode)
  };
};

/**
 * Check if error code is service-specific
 * @param {string} errorCode - Error code to check
 * @returns {boolean} True if it's a service-specific error code
 */
const isServiceSpecificError = (errorCode) => {
  return Object.values(SERVICE_ERROR_CODES).includes(errorCode);
};

/**
 * Get all services with their error codes
 * @returns {object} Object with service names as keys and their error codes as values
 */
const getAllServiceErrorCodes = () => {
  const result = {};
  
  for (const [service, prefix] of Object.entries(SERVICE_PREFIXES)) {
    const serviceName = service.toLowerCase();
    result[serviceName] = getErrorCodesForService(serviceName);
  }
  
  return result;
};

module.exports = {
  SERVICE_ERROR_CODES,
  SERVICE_ERROR_DESCRIPTIONS,
  SERVICE_ERROR_HTTP_STATUS,
  SERVICE_PREFIXES,
  
  // Helper functions
  getServiceFromErrorCode,
  getErrorCodesForService,
  generateServiceErrorCode,
  getServiceErrorDetails,
  isServiceSpecificError,
  getAllServiceErrorCodes
};